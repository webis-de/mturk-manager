# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    createTemplateAssignment(template: InputTemplateAssignment!): MutationCreateTemplateAssignment
    createTemplateGlobal(template: InputTemplateGlobal!): MutationCreateTemplateGlobal
    createTemplateHit(template: InputTemplateHIT!): MutationCreateTemplateHIT
    createTemplateWorker(template: InputTemplateWorker!): MutationCreateTemplateWorker
    deleteTemplateAssignment(idTemplate: ID!): MutationDeleteTemplateAssignment
    deleteTemplateGlobal(idTemplate: ID!): MutationDeleteTemplateGlobal
    deleteTemplateHit(idTemplate: ID!): MutationDeleteTemplateHIT
    deleteTemplateWorker(idTemplate: ID!): MutationDeleteTemplateWorker
    updateTemplateAssignment(template: InputTemplateAssignment!): MutationUpdateTemplateAssignment
    updateTemplateGlobal(template: InputTemplateGlobal!): MutationUpdateTemplateGlobal
    updateTemplateHit(template: InputTemplateHIT!): MutationUpdateTemplateHIT
    updateTemplateWorker(template: InputTemplateWorker!): MutationUpdateTemplateWorker
}

type MutationCreateTemplateAssignment {
    template: TypeTemplateAssignment
}

type MutationCreateTemplateGlobal {
    templateNew: TypeTemplateGlobal
}

type MutationCreateTemplateHIT {
    template: TypeTemplateHIT
}

type MutationCreateTemplateWorker {
    template: TypeTemplateWorker
}

type MutationDeleteTemplateAssignment {
    idTemplate: ID
}

type MutationDeleteTemplateGlobal {
    idTemplate: ID
}

type MutationDeleteTemplateHIT {
    idTemplate: ID
}

type MutationDeleteTemplateWorker {
    idTemplate: ID
}

type MutationUpdateTemplateAssignment {
    template: TypeTemplateAssignment
}

type MutationUpdateTemplateGlobal {
    template: TypeTemplateGlobal
}

type MutationUpdateTemplateHIT {
    template: TypeTemplateHIT
}

type MutationUpdateTemplateWorker {
    template: TypeTemplateWorker
}

type Query {
    settingsBatch(project: ID): [TypeSettingsBatch]
    templatesAssignment(project: ID): [TypeTemplateAssignment]
    templatesGlobal(project: ID): [TypeTemplateGlobal]
    templatesHit(project: ID): [TypeTemplateHIT]
    templatesWorker(project: ID): [TypeTemplateWorker]
}

type TypeKeyword {
    id: ID!
    projects: [TypeSettingsBatch!]!
    text: String!
}

type TypeProject {
    amountBudgetMax: Int
    apiTemplateAssignmentRelated: [TypeTemplateAssignment!]!
    apiTemplateGlobalRelated: [TypeTemplateGlobal!]!
    apiTemplateHitRelated: [TypeTemplateHIT!]!
    apiTemplateWorkerRelated: [TypeTemplateWorker!]!
    countAssignmentsMaxPerWorker: Int
    datetimeCreation: DateTime!
    datetimeVisited: DateTime!
    id: ID!
    name: String!
    settingsBatch: [TypeSettingsBatch!]!
    settingsBatchDefault: TypeSettingsBatch
    slug: String!
    version: Int!
}

type TypeSettingsBatch {
    blockWorkers: Boolean!
    countAssignments: Int!
    countAssignmentsMaxPerWorker: Int
    description: String
    duration: Int!
    hasContentAdult: Boolean!
    id: ID!
    keywords: [TypeKeyword!]!
    lifetime: Int!
    name: String!
    project: TypeProject!
    projectDefault: TypeProject
    qualificationAssignmentsApproved: Int
    qualificationHitsApproved: Int
    qualificationLocale: String
    reward: Int!
    templateWorker: TypeTemplateWorker
    title: String
}

type TypeTemplateAssignment {
    datetimeCreation: DateTime!
    id: ID!
    isActive: Boolean!
    name: String!
    project: TypeProject!
    template: String!
    templatesUsed: [TypeTemplateWorker!]!
}

type TypeTemplateGlobal {
    datetimeCreation: DateTime!
    id: ID!
    isActive: Boolean!
    name: String!
    project: TypeProject!
    template: String!
    templatesUsed: [TypeTemplateWorker!]!
}

type TypeTemplateHIT {
    datetimeCreation: DateTime!
    id: ID!
    isActive: Boolean!
    name: String!
    project: TypeProject!
    template: String!
    templatesUsed: [TypeTemplateWorker!]!
}

type TypeTemplateWorker {
    datetimeCreation: DateTime!
    heightFrame: Int!
    id: ID!
    isActive: Boolean!
    jsonDictParameters: String!
    name: String!
    project: TypeProject!
    settingsBatch: [TypeSettingsBatch!]!
    template: String!
    templateAssignment: TypeTemplateAssignment
    templateGlobal: TypeTemplateGlobal
    templateHit: TypeTemplateHIT
    templateOriginal: TypeTemplateWorker
    templates: [TypeTemplateWorker!]!
}

input InputTemplateAssignment {
    datetimeCreation: DateTime
    id: Int
    isActive: Boolean!
    name: String!
    project: Int!
    template: String!
}

input InputTemplateGlobal {
    datetimeCreation: DateTime
    id: Int
    isActive: Boolean!
    name: String!
    project: Int!
    template: String!
}

input InputTemplateHIT {
    datetimeCreation: DateTime
    id: Int
    isActive: Boolean!
    name: String!
    project: Int!
    template: String!
}

input InputTemplateWorker {
    datetimeCreation: DateTime
    heightFrame: Int!
    id: Int
    isActive: Boolean!
    jsonDictParameters: String!
    name: String!
    project: Int!
    template: String!
    templateAssignment: Int
    templateGlobal: Int
    templateHit: Int
    templateOriginal: Int
}


"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime